install.packages("tidyverse")
library(tidyverse)
}
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)
}
if(!require(rlang)){
install.packages("rlang")
library(rlang)
}
if(!require(tseries)){
install.packages("tseries")
library(tseries)
}
model = depmix(ITAts ~ 1, data=data.frame(ITAts), nstates=3)
model
model = depmix(ITAts ~ 1, data=data.frame(ITAts), nstates=3)
model
fmodel = fit(model)
model = depmix(ITAts ~ 1, data=data.frame(ITAts), nstates=3)
model
fmodel = fit(model)
fmodel
model = depmix(ITAts ~ 1, data=data.frame(ITAts), nstates=3)
model
fmodel = fit(model)
plot(fmodel)
model = depmix(ITAts ~ 1, data=data.frame(ITAts), nstates=3)
model
fmodel = fit(model)
autoplot(fmodel)
model = depmix(ITAts ~ 1, data=data.frame(ITAts), nstates=3)
model
fmodel = fit(model)
fmodel
summary(fmodel)
model = depmix(ITAts ~ 1, data=data.frame(ITAts), nstates=3)
model
fmodel = fit(model)
fmodel
summary(fmodel)
estStates <- posterior(fmodel)
plot(Time(ITAts),estStates[,1], cex=.3)
model = depmix(ITAts ~ 1, data=data.frame(ITAts), nstates=3)
model
fmodel = fit(model)
fmodel
summary(fmodel)
estStates <- posterior(fmodel)
plot(time(ITAts),estStates[,1], cex=.3)
model = depmix(ITAts ~ 1, data=data.frame(ITAts), nstates=3)
model
fmodel = fit(model)
fmodel
summary(fmodel)
estStates <- posterior(fmodel)
plot(time(ITAts),estStates[,1], cex=.3)
plot(ITAts)
knitr::opts_chunk$set(echo = FALSE, results = 'asis')
list.of.packages <- c("fpp2", "forecast","ggplot2","depmixS4","tidyverse","dplyr","rlang","tseries")
if(!require(fpp2)){
install.packages("fpp2")
library(fpp2)
}
if(!require(forecast)){
install.packages("forecast")
library(forecast)
}
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)
}
if(!require(depmixS4)){
install.packages("depmixS4")
library(depmixS4)
}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)
}
if(!require(rlang)){
install.packages("rlang")
library(rlang)
}
if(!require(tseries)){
install.packages("tseries")
library(tseries)
}
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
View(airdataset)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
st55datset= subset(data=airdataset, station_id==55)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(data=airdataset, station_id==55)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
view(st55datset)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
attach(st55datset)
pm25ts=ts(airdataset$pm25, start = c(format(airdataset$datetime[1], "%Y"), format(airdataset$datetime[1], "%m")), frequency = 12)
knitr::opts_chunk$set(echo = FALSE, results = 'asis')
list.of.packages <- c("fpp2", "forecast","ggplot2","depmixS4","tidyverse","dplyr","rlang","tseries","zoo")
if(!require(fpp2)){
install.packages("fpp2")
library(fpp2)
}
if(!require(forecast)){
install.packages("forecast")
library(forecast)
}
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)
}
if(!require(depmixS4)){
install.packages("depmixS4")
library(depmixS4)
}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)
}
if(!require(rlang)){
install.packages("rlang")
library(rlang)
}
if(!require(tseries)){
install.packages("tseries")
library(tseries)
}
if(!require(zoo)){
install.packages("zoo")
library(zoo)
}
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
attach(st55datset)
pm25ts <- zoo(airdataset$pm25, airdataset$datetime)
pm25ts
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
attach(st55datset)
pm25ts <- zoo(airdataset$pm25, airdataset$datetime)
pm25ts
plot(pm25ts)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
attach(st55datset)
pm25ts <- zoo(airdataset$pm25, airdataset$datetime)
moving_avg <- rollmean(pm25ts, k = 24, fill = NA)
plot(moving_avg)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
attach(st55datset)
pm25ts <- zoo(airdataset$pm25, airdataset$datetime)
moving_avg <- rollmean(pm25ts, k = 24, fill = NA)
moving_avg
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
attach(st55datset)
pm25ts <- zoo(airdataset$pm25, airdataset$datetime)
moving_avg <- rollmean(pm25ts, k = 24, fill = NA)
moving_avg
plot(moving_avg)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
attach(st55datset)
pm25ts <- zoo(airdataset$pm25, airdataset$datetime)
moving_avg <- rollmean(pm25ts, k = 24, fill = NA)
moving_avg
view(moving_avg)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
attach(st55datset)
pm25ts <- zoo(airdataset$pm25, airdataset$datetime)
moving_avg <- rollmean(pm25ts, k = 24, fill = NA)
moving_avg
view(moving_avg)
vew(pm25ts)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
attach(st55datset)
pm25ts <- zoo(airdataset$pm25, airdataset$datetime)
moving_avg <- rollmean(pm25ts, k = 24, fill = NA)
moving_avg
view(moving_avg)
vew(pm25ts)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
attach(st55datset)
pm25ts <- zoo(airdataset$pm25, airdataset$datetime)
moving_avg <- rollmean(pm25ts, k = 24, fill = NA)
moving_avg
vew(pm25ts)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
st55datset$Time <- as.Date(st55datset$datetime, format = "%Y-%m-%dT%hh")
attach(st55datset)
pm25ts <- zoo(airdataset$pm25, airdataset$datetime)
moving_avg <- rollmean(pm25ts, k = 24, fill = NA)
moving_avg
vew(pm25ts)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
st55datset$Time <- as.Date(st55datset$datetime, format = "%Y-%m-%dT%hh")
attach(st55datset)
pm25ts <- zoo(airdataset$pm25, airdataset$datetime)
moving_avg <- rollmean(pm25ts, k = 24, fill = NA)
moving_avg
view(pm25ts)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
st55datset$Time <- as.Date(st55datset$datetime, format = "%Y-%m-%dT%hh")
attach(st55datset)
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
moving_avg <- rollmean(pm25ts, k = 24, fill = NA)
moving_avg
view(pm25ts)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
st55datset$Time <- as.Date(st55datset$datetime, format = "%Y-%m-%dT%hh")
attach(st55datset)
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
moving_avg <- rollmean(pm25ts, k = 24, fill = NA)
moving_avg
view(pm25ts)
view(moving_avg)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
st55datset$Time <- as.Date(st55datset$datetime, format = "%Y-%m-%dT%hh")
attach(st55datset)
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
moving_avg= filter(pm25ts, rep(1/24,24))
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
st55datset$Time <- as.Date(st55datset$datetime, format = "%Y-%m-%dT%hh")
attach(st55datset)
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
moving_avg= filter(pm25ts, rep(1/24,24))
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
st55datset$Time <- as.Date(st55datset$datetime, format = "%Y-%m-%dT%hh")
attach(st55datset)
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
moving_avg= filter(pm25ts, rep(1/24,24))
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
st55datset$Time <- as.Date(st55datset$datetime, format = "%Y-%m-%dT%hh")
attach(st55datset)
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
moving_avg= rollmean(pm25ts,24)
view(pm25ts)
view(moving_avg)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
st55datset$Time <- as.Date(st55datset$datetime, format = "%Y-%m-%dT%hh")
attach(st55datset)
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
24avg= rollmean(pm25ts,24)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
st55datset$Time <- as.Date(st55datset$datetime, format = "%Y-%m-%dT%hh")
attach(st55datset)
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
dayavg= rollmean(pm25ts,24)
view(pm25ts)
view(dayavg)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
st55datset$Time <- as.Date(st55datset$datetime, format = "%Y-%m-%dT%hh")
attach(st55datset)
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
dayavg= rollmean(pm25ts,k=24)
view(pm25ts)
view(dayavg)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
st55datset$Time <- as.Date(st55datset$datetime, format = "%Y-%m-%dT%hh")
attach(st55datset)
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
daily_avg <- aggregate(pm25ts, as.Date(index(pm25ts)), mean)
daily_avg_ma <- rollmean(daily_avg, k = 24, fill = NA)
view(daily_avg_ma)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
st55datset$Time <- as.Date(st55datset$datetime, format = "%Y-%m-%dT%hh")
attach(st55datset)
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
daily_avg <- aggregate(pm25ts, as.Date(index(pm25ts)), mean)
daily_avg_ma <- rollmean(daily_avg, k = 24, fill = NA)
view(daily_avg_ma)
plot(daily_avg_ma)
airdataset=read.csv("https://raw.githubusercontent.com/devpra1999/Time-Series-20236/main/ts_epa_2020_west_sept_fill.csv",header = TRUE)
attach(airdataset)
st55datset= subset(airdataset,station_id==55)
st55datset$Time <- as.Date(st55datset$datetime, format = "%Y-%m-%dT%hh")
attach(st55datset)
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
daily_avg <- aggregate(pm25ts, as.Date(index(pm25ts)), mean)
daily_avg_ma <- rollmean(daily_avg, k = 24, fill = NA)
view(daily_avg_ma)
plot(pm25ts)
knitr::opts_chunk$set(echo = FALSE, results = 'asis')
list.of.packages <- c("fpp2", "forecast","ggplot2","depmixS4","tidyverse","dplyr","rlang","tseries","zoo")
if(!require(fpp2)){
install.packages("fpp2")
library(fpp2)
}
if(!require(forecast)){
install.packages("forecast")
library(forecast)
}
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)
}
if(!require(depmixS4)){
install.packages("depmixS4")
library(depmixS4)
}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)
}
if(!require(rlang)){
install.packages("rlang")
library(rlang)
}
if(!require(tseries)){
install.packages("tseries")
library(tseries)
}
if(!require(zoo)){
install.packages("zoo")
library(zoo)
}
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
daily_avg <- aggregate(pm25ts, as.Date(index(pm25ts)), mean)
daily_avg_ma <- rollmean(daily_avg, k = 24, fill = NA)
ggplot(data=daily_avg_ma, mapping = aes()labs(title = "Graph 1: 10 year Italian Bond Yield (1997-2019)", x = "Year of observation", y = "Nominal Bond Yield (%)")+ scale_x_date(date_labels = "%Y")
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
daily_avg <- aggregate(pm25ts, as.Date(index(pm25ts)), mean)
daily_avg_ma <- rollmean(daily_avg, k = 24, fill = NA)
ggplot(data=daily_avg_ma, mapping = aes()+labs(title = "Graph 1: 10 year Italian Bond Yield (1997-2019)", x = "Year of observation", y = "Nominal Bond Yield (%)")+ scale_x_date(date_labels = "%Y")
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
daily_avg <- aggregate(pm25ts, as.Date(index(pm25ts)), mean)
daily_avg_ma <- rollmean(daily_avg, k = 24, fill = NA)
ggplot(data=daily_avg_ma, mapping = aes()+labs(title = "Graph 1: 10 year Italian Bond Yield (1997-2019)", x = "Year of observation", y = "Nominal Bond Yield (%)"))
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
daily_avg <- aggregate(pm25ts, as.Date(index(pm25ts)), mean)
daily_avg_ma <- rollmean(daily_avg, k = 24, fill = NA)
ggplot(data=daily_avg_ma, labs(title = "Graph 1: 10 year Italian Bond Yield (1997-2019)", x = "Year of observation", y = "Nominal Bond Yield (%)"))
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
daily_avg <- aggregate(pm25ts, as.Date(index(pm25ts)), mean)
daily_avg_ma <- rollmean(daily_avg, k = 24, fill = NA)
ggplot(data=daily_avg_ma, labs(title = "Graph 1: 10 year Italian Bond Yield (1997-2019)", x = "Year of observation", y = "Nominal Bond Yield (%)"))
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
daily_avg <- aggregate(pm25ts, as.Date(index(pm25ts)), mean)
daily_avg_ma <- rollmean(daily_avg, k = 24, fill = NA)
p <- ggplot(daily_avg_ma, aes(x=day, y=value)) +
geom_line() +
xlab("")
p
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
daily_avg <- aggregate(pm25ts, as.Date(index(pm25ts)), mean)
daily_avg_ma <- rollmean(daily_avg, k = 24, fill = NA)
is.ts(daily_avg_ma)
### Time should be fixed and the average(?) of wind taken into account
# windy <- ggplot(data=st55datset, aes(x=Time, y=wind)) +
#   ggtitle("Wind strength") +
#   geom_line() +
#   scale_y_continuous(expand=c(0,0)) +
#   scale_x_date(limit=c(as.Date("2020-06-01"),as.Date("2020-09-30")))+
#   labs(x=NULL, y=NULL)
# windy
?plot
knitr::opts_chunk$set(echo = FALSE, results = 'asis')
list.of.packages <- c("fpp2", "forecast","ggplot2","depmixS4","tidyverse","dplyr","rlang","tseries","zoo")
if(!require(fpp2)){
install.packages("fpp2")
library(fpp2)
}
if(!require(forecast)){
install.packages("forecast")
library(forecast)
}
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)
}
if(!require(depmixS4)){
install.packages("depmixS4")
library(depmixS4)
}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)
}
if(!require(rlang)){
install.packages("rlang")
library(rlang)
}
if(!require(tseries)){
install.packages("tseries")
library(tseries)
}
if(!require(zoo)){
install.packages("zoo")
library(zoo)
}
plot(scale(daily_avg_ma_pm25), col = "darkgreen", main = "Graph 3: Average Wind Speed (knots/second) at station 55, June-September 2020", xlab = "Time", ylab= "Average Wind Speed (knots/second)")
plot(scale(daily_avg_ma_pm25), col = "darkgreen")
plot(scale(daily_avg_ma_pm25), col = "darkgreen")
plot(scale(daily_avg_ma_pm25), col = "darkgreen")
plot(scale(daily_avg_ma_pm25), col = "darkgreen")
pm25ts <- zoo(st55datset$pm25, st55datset$datetime)
?scale
knitr::opts_chunk$set(echo = FALSE, out.height = "75%", out.width = "75%")
list.of.packages <- c("fpp2", "forecast","ggplot2","depmixS4","tidyverse","dplyr","rlang","tseries","zoo")
if(!require(fpp2)){
install.packages("fpp2")
library(fpp2)
}
if(!require(forecast)){
install.packages("forecast")
library(forecast)
}
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)
}
if(!require(depmixS4)){
install.packages("depmixS4")
library(depmixS4)
}
if(!require(markovchain)){
install.packages("markovchain")
library(markovchain)
}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)
}
if(!require(rlang)){
install.packages("rlang")
library(rlang)
}
if(!require(tseries)){
install.packages("tseries")
library(tseries)
}
if(!require(zoo)){
install.packages("zoo")
library(zoo)
}
plot(Nile)
?Nile
install(dlm)
?dlm
??dlm
package(dlm)
install.packages("dlm")
